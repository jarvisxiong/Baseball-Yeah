<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhiduan.axp.dao.order.mapper.TbTaskMapper">

    <resultMap id="BaseResultMap" type="com.zhiduan.axp.dao.order.bean.TbTask">
        <constructor>
            <idArg column="task_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="theme" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="rule" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="claim" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="task_cover" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="is_img" jdbcType="TINYINT" javaType="java.lang.Byte"/>
            <arg column="task_level" jdbcType="TINYINT" javaType="java.lang.Byte"/>
            <arg column="create_user_id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="duty_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    task_id, task_no, theme, description, rule, claim, task_cover, is_img, task_unit_price, 
    unit_total, upper_limit, task_unit_num, task_level, college_id, effective_start_date, 
    effective_end_date, deadline, create_user_id, create_time, is_published, publish_user_id, 
    publish_time, is_processed
  </sql>
    <select id="selectByPrimaryKey" resultType="com.zhiduan.axp.dao.order.bean.TbTask" parameterType="com.zhiduan.axp.dao.order.bean.TbTask">
        select
        task_id  taskId,  theme, description, rule,claim, task_cover taskCover, is_img isImg, task_level taskLevel,
        create_user_id createUserId, create_time createTime,is_remark isRemark
        from tb_task
        where task_id = #{taskId,jdbcType=BIGINT}
    </select>

    <select id="selectTask" resultType="com.zhiduan.axp.dao.order.bean.TbTask" parameterType="com.zhiduan.axp.dao.order.bean.TbTask">

        SELECT
        a.task_id taskId,d.task_no taskNo, d.task_unit_price taskUnitPrice, d.unit_total unitTotal,
        a.theme, a.task_level taskLevel, b.user_name userName,  c.dept_name dutyName,d.state,
        a.create_time createTime ,  t1.carry, t1.cancel,  t1.done,e.full_name fullName
        FROM tb_task a
        INNER  JOIN tb_task_sub d
        ON a.task_id=d.task_id
        INNER  JOIN tb_user_manager b
        ON a.create_user_id =b.user_manager_id
        INNER JOIN tb_college e
        ON e.college_id=d.college_id
        INNER  JOIN tb_dept c
        ON b.dept_id=c.dept_id
        LEFT  JOIN (SELECT a.task_sub_id
        ,COUNT(CASE WHEN b.state = 3 THEN 1 END)  carry
        ,COUNT(CASE WHEN b.state = 6 THEN 1 END)  cancel
        ,COUNT(CASE WHEN b.state = 5 THEN 1 END)  done
        FROM tb_sys_task_order a INNER JOIN tb_order b
        ON a.order_id = b.order_id
        GROUP BY a.task_sub_id) t1
        ON d.task_sub_id = t1.task_sub_id
        where
        1=1
        <if test="taskNo != '' and taskNo!=null">
            AND d.task_no like CONCAT('%',TRIM(#{taskNo}),'%')
        </if>
        <if test="state != '' and state!=null">
            AND d.state like CONCAT('%',TRIM(#{state}),'%')
        </if>
        <if test="theme != '' and theme!=null">
            AND a.theme like CONCAT('%',TRIM(#{theme}),'%')
        </if>
        <if test="taskLevel != null and taskLevel!= ''">
            and a.task_level=#{taskLevel}
        </if>
        <if test="dutyId != null and dutyId!= ''">
            and b.duty_id=#{dutyId}
        </if>
        <if test="collegeId != null and collegeId!= ''">
            and e.college_id=#{collegeId}
        </if>

        <if test="startDate != null  and startDate != '' ">
            <![CDATA[ and a.create_time  >= #{startDate}]]>
        </if>
        <if test="endDate != null  and endDate != '' ">
            <![CDATA[ and a.create_time  <= #{endDate}]]>
        </if>

        ORDER BY ${sort} ${order}
        LIMIT #{offset}, #{limit}
    </select>
    <select id="selectTaskCount" resultType="int" parameterType="com.zhiduan.axp.dao.order.bean.TbTask">
        select COUNT(1) from (
        SELECT
        a.task_id taskId,d.task_no taskNo, d.task_unit_price taskUnitPrice, d.unit_total unitTotal,
        a.theme, a.task_level taskLevel, b.user_name userName,  c.dept_name dutyName,d.state,
        a.create_time createTime
        FROM tb_task a
        INNER  JOIN tb_task_sub d
        ON a.task_id=d.task_id
        INNER  JOIN tb_user_manager b
        ON a.create_user_id =b.user_manager_id
        INNER JOIN tb_college e
        ON e.college_id=d.college_id
        INNER  JOIN tb_dept c
        ON b.dept_id=c.dept_id
        where
        1=1
        <if test="taskNo != '' and taskNo!=null">
            AND d.task_no like CONCAT('%',TRIM(#{taskNo}),'%')
        </if>
        <if test="state != '' and state!=null">
            AND d.state like CONCAT('%',TRIM(#{state}),'%')
        </if>
        <if test="theme != '' and theme!=null">
            AND a.theme like CONCAT('%',TRIM(#{theme}),'%')
        </if>
        <if test="taskLevel != null and taskLevel!= ''">
            and a.task_level=#{taskLevel}
        </if>
        <if test="dutyId != null and dutyId!= ''">
            and b.duty_id=#{dutyId}
        </if>
        <if test="collegeId != null and collegeId!= ''">
            and e.college_id=#{collegeId}
        </if>

        <if test="startDate != null  and startDate != '' ">
            <![CDATA[ and a.create_time  >= #{startDate}]]>
        </if>
        <if test="endDate != null  and endDate != '' ">
            <![CDATA[ and a.create_time  <= #{endDate}]]>
        </if>

        ) t1

    </select>

    <select id="getTaskSubCount" resultType="int" parameterType="com.zhiduan.axp.dao.order.bean.TbTask">
        SELECT COUNT(1)  FROM tb_task_sub WHERE state !=0 AND task_id=#{taskId}
    </select>
    <update id="updateTaskSub" parameterType="com.zhiduan.axp.dao.order.bean.TbTask">
        UPDATE  tb_task_sub
        set state = 1 where  task_id=#{taskId} and state=0
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_task
    where task_id = #{taskId,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.zhiduan.axp.dao.order.bean.TbTask">
    insert into tb_task (task_id, task_no, theme, 
      description, rule, claim, 
      task_cover, is_img, task_unit_price, 
      unit_total, upper_limit, task_unit_num, 
      task_level, college_id, effective_start_date, 
      effective_end_date, deadline, create_user_id, 
      create_time, is_published, publish_user_id, 
      publish_time, is_processed)
    values (#{taskId,jdbcType=BIGINT}, #{taskNo,jdbcType=BIGINT}, #{theme,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{rule,jdbcType=VARCHAR}, #{claim,jdbcType=VARCHAR}, 
      #{taskCover,jdbcType=VARCHAR}, #{isImg,jdbcType=TINYINT}, #{taskUnitPrice,jdbcType=INTEGER}, 
      #{unitTotal,jdbcType=INTEGER}, #{upperLimit,jdbcType=INTEGER}, #{taskUnitNum,jdbcType=INTEGER}, 
      #{taskLevel,jdbcType=TINYINT}, #{collegeId,jdbcType=BIGINT}, #{effectiveStartDate,jdbcType=TIMESTAMP}, 
      #{effectiveEndDate,jdbcType=TIMESTAMP}, #{deadline,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isPublished,jdbcType=TINYINT}, #{publishUserId,jdbcType=BIGINT}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{isProcessed,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" parameterType="com.zhiduan.axp.dao.order.bean.TbTask" useGeneratedKeys="true" keyProperty="taskId">
        insert into tb_task
        <trim prefix="(" suffix=")" suffixOverrides=",">


            <if test="taskNo != null">
                task_no,
            </if>
            <if test="theme != null">
                theme,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="rule != null">
                rule,
            </if>
            <if test="claim != null">
                claim,
            </if>
            <if test="taskCover != null and taskCover != ''">
                task_cover,
            </if>
            <if test="isImg != null">
                is_img,
            </if>
            <if test="isRemark != null">
                is_remark,
            </if>
            <if test="taskLevel != null">
                task_level,
            </if>

            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskNo != null">
                #{taskNo,jdbcType=BIGINT},
            </if>

            <if test="theme != null">
                #{theme,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="rule != null">
                #{rule,jdbcType=VARCHAR},
            </if>
            <if test="claim != null">
                #{claim,jdbcType=VARCHAR},
            </if>
            <if test="taskCover != null">
                #{taskCover,jdbcType=VARCHAR},
            </if>
            <if test="isImg != null">
                #{isImg,jdbcType=TINYINT},
            </if>
            <if test="isRemark != null">
                #{isRemark},
            </if>
            <if test="taskLevel != null">
                #{taskLevel,jdbcType=TINYINT},
            </if>

            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>

        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zhiduan.axp.dao.order.bean.TbTask">
        update tb_task
        <set>

            <if test="theme != null">
                theme = #{theme,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="rule != null">
                rule = #{rule,jdbcType=VARCHAR},
            </if>
            <if test="claim != null">
                claim = #{claim,jdbcType=VARCHAR},
            </if>
            <if test="taskCover != null">
                task_cover = #{taskCover,jdbcType=VARCHAR},
            </if>
            <if test="isImg != null">
                is_img = #{isImg,jdbcType=TINYINT},
            </if>
            <if test="isRemark != null">
                is_remark = #{isRemark},
            </if>
            <if test="taskLevel != null">
                task_level = #{taskLevel,jdbcType=TINYINT},
            </if>

            <if test="effectiveStartDate != null">
                effective_start_date = #{effectiveStartDate,jdbcType=TIMESTAMP},
            </if>
            <if test="effectiveEndDate != null">
                effective_end_date = #{effectiveEndDate,jdbcType=TIMESTAMP},
            </if>
            <if test="deadline != null">
                deadline = #{deadline,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>

        </set>
        where task_id = #{taskId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhiduan.axp.dao.order.bean.TbTask">
    update tb_task
    set task_no = #{taskNo,jdbcType=BIGINT},
      theme = #{theme,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      rule = #{rule,jdbcType=VARCHAR},
      claim = #{claim,jdbcType=VARCHAR},
      task_cover = #{taskCover,jdbcType=VARCHAR},
      is_img = #{isImg,jdbcType=TINYINT},
      task_unit_price = #{taskUnitPrice,jdbcType=INTEGER},
      unit_total = #{unitTotal,jdbcType=INTEGER},
      upper_limit = #{upperLimit,jdbcType=INTEGER},
      task_unit_num = #{taskUnitNum,jdbcType=INTEGER},
      task_level = #{taskLevel,jdbcType=TINYINT},
      college_id = #{collegeId,jdbcType=BIGINT},
      effective_start_date = #{effectiveStartDate,jdbcType=TIMESTAMP},
      effective_end_date = #{effectiveEndDate,jdbcType=TIMESTAMP},
      deadline = #{deadline,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_published = #{isPublished,jdbcType=TINYINT},
      publish_user_id = #{publishUserId,jdbcType=BIGINT},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      is_processed = #{isProcessed,jdbcType=TINYINT}
    where task_id = #{taskId,jdbcType=BIGINT}
  </update>
</mapper>